% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univariate_mean.R
\name{WBS.univar.CPD}
\alias{WBS.univar.CPD}
\title{Univariate mean change points detection based on wild binary segmentation with tuning parameter selected by sSIC.}
\usage{
WBS.univar.CPD(y, Alpha, Beta, delta)
}
\arguments{
\item{y}{A \code{numeric} vector of observations.}

\item{Alpha}{A \code{integer} vector of starting indices of random intervals.}

\item{Beta}{A \code{integer} vector of ending indices of random intervals.}

\item{delta}{A positive \code{integer} scalar of minimum spacing.}
}
\value{
A \code{list} with the following structure:
 \item{cpt}{A vector of estimated change point locations (sorted in strictly increasing order)}
 \item{tau}{A scalar of selected threshold tau based on sSIC}
}
\description{
Perform univariate mean change points detection based on wild binary segmentation. The threshold parameter tau for WBS is automatically selected based on the sSIC score defined in Equation (4) in Fryzlewicz (2014).
}
\examples{
set.seed(0)
cpt_true = c(20, 50, 170)
y = rnorm(300) + c(rep(0,20),rep(2,30),rep(0,120),rep(2,130))
intervals = WBS.intervals(M = 300, lower = 1, upper = length(y))
temp = WBS.univar.CPD(y, intervals$Alpha, intervals$Beta, delta = 5)
cpt_hat = temp$cpt
plot.ts(y)
points(x = cpt_hat, y = y[cpt_hat], col = "red")
Hausdorff.dist(cpt_hat, cpt_true)
cpt_LR = local.refine.univar(cpt_hat, y)
Hausdorff.dist(cpt_LR, cpt_true)
}
\references{
Wang, Yu and Rinaldo (2020) <doi:10.1214/20-EJS1710>;
            Fryzlewicz (2014), Wild binary segmentation for multiple change-point detection, <DOI: 10.1214/14-AOS1245>
}
\author{
Daren Wang & Haotian Xu
}
