% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HD_covariance.R
\name{WBSIP.cov}
\alias{WBSIP.cov}
\title{Wild binary segmentation for covariance change points detection through Independent Projection.}
\usage{
WBSIP.cov(X, X_prime, s, e, Alpha, Beta, delta, level = 0)
}
\arguments{
\item{X}{A \code{numeric} vector of observations.}

\item{s}{A \code{integer} scalar of starting index.}

\item{e}{A \code{integer} scalar of ending index.}

\item{Alpha}{A \code{integer} vector of starting indices of random intervals.}

\item{Beta}{A \code{integer} vector of ending indices of random intervals.}

\item{delta}{A positive \code{integer} scalar of minimum spacing.}

\item{level}{A parameter for tracking the level at which a change point is detected. Should be fixed as 0.}

\item{...}{Additional arguments.}
}
\value{
A \code{list} with the structure:
\itemize{
 \item S:           A vector of estimated changepoints (sorted in strictly increasing order).
 \item Dval:        A vector of values of CUSUM statistic based on KS distance.
 \item Level:       A vector representing the levels at which each change point is detected.
 \item Parent:      A matrix with the starting indices on the first row and the ending indices on the second row.
}
}
\description{
Perform wild binary segmentation for covariance change points detection through Independent Projection
}
\examples{
y = c(rnorm(100, 0, 1), rnorm(100, 0, 10), rnorm(100, 0, 40))
M = 120
Alpha = sample.int(size = M, n = 300, replace = TRUE)
Beta = sample.int(size = M, n = T, replace = TRUE)
for(j in 1:M){
  aux =  Alpha[j]
  aux2 = Beta[j]
  Alpha[j] = min(aux, aux2)
  Beta[j] = max(aux, aux2)
}
temp = WBS.univar(y, 1, 300, Alpha, Beta, 5)
plot.ts(y)
points(x = tail(temp$S[order(temp$Dval)], 4), y = Y[,tail(temp$S[order(temp$Dval)],4)], col = "red")
BS.threshold(temp, 1.5)
}
\author{
Haotian Xu
}
